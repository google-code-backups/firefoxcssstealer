#summary Report on the teamwork and tools used

= Team work report =

== Communication ==

The primarily means of communication for our team was *email*. We did not use the mailing list since there were just three people on our team. 

On-line methods of communication also didn't work for us, since we had different schedules and most members of our group could not use IM at work. However, we did use *telephone communication* (called each other to schedule/reschedule the meetings).

We had group meetings every week (or twice a week), so *face to face communication* was also quite important. 

As for group dynamics, we did not have any conflicts and everybody made a somewhat equal contribution into the project. We divided the work into three parts at the beginning of the project, but as the development went along, we tried to redistribute the work load and solve some problems from different angles. For examples, there was an issue with the right and back slashes in the file path, that were reconginzed in Windows, but did not work in Linux. We tried to solve the issue from JavaScript code, as well as from C++ code. So, two people were working simulteneously on the problem. At the end we found a solution in using built in Mozilla components.

We also tested and debugged each others code, especially if there were some unresolved issues. It helped to test the code on different machines (one of our group members had a Linux, another had a Vista, and third had a Windows XP) and with different configurations of Mozilla (two of the members had the Minefield build and the third member had the Shiretoko version) 

== Google code tools ==

The most handy tool provided by the Google Code website was the *Code Management System*, we used SVN. That allowed easy access to the latest version of the code. And although we had some code conflicts, they were pretty easy to resolve.

We also used *Bug Tracker*, which allowed us not to forget about some issues that still needed to be implemented.

Using the *Code Review* functionality was a little confusion and actually was not that useful; perhaps, because the size of the group was pretty small, as well as the size of the project. So we knew each others code pretty well.

At the beginning of the project we used *Wiki* a lot to discuss the implementation issues, interface of the components. Wiki pages are quite useful at the stage of planing the architecture. After that email gives more direct and to the point communication, since we were discussing concrete issues.